type Query {
  me: [User!]
  user(_id: ID!): User
  users: [User]!
  wallpapers(limit: Int): [Wallpaper]
  wallpaper(_id: ID!): Wallpaper
  categoryPage(page: Int,category: String!): CategoryPage
}

type Mutation {
    addWallpaper(image: String!,name:String,tags:String,author:String,resolution:String,categoly:String): Wallpaper
    login(username: String!,password: String!): AuthData,
    register(username: String!,password: String!,name:String!): User
    addCategory(name:String): Category
    findCategory(name: String): [Category]
}

type User {
  _id: ID!
  name: String!
}

type Wallpaper {
    _id: ID!
    name: String
    image: String!
    user: User,
    date: String,
    tags: [String],
    resolution: String,
    author: String,
    categoly: String
}

type CategoryPage  {
  itemsList: [Wallpaper]
  paginator: paginator
}

type paginator {
    itemCount: Int,
    perPage: Int,
    pageCount: Int,
    currentPage: Int,
    slNo: Int,
    hasPrevPage: Boolean,
    hasNextPage: Boolean,
    prev: String,
    next: String
}


type AuthData {
  _id: ID,
  jwt: String, 
  username: String
}

type Category {
  _id: ID!,
  name: String
}