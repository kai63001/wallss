type Query {
  me: [User!]
  user(_id: ID!): User
  users: [User]!
  wallpapers(limit: Int): [Wallpaper]
  wallpaper(_id: ID!): Wallpaper
}

type Mutation {
    addWallpaper(image: String!,name:String,tags:String): Wallpaper
    login(username: String!,password: String!): AuthData,
    register(username: String!,password: String!,name:String!): User
}

type User {
  _id: ID!
  name: String!
}

type Wallpaper {
    _id: ID!
    name: String
    image: String!
    user: User,
    date: String,
    tags: [String]
}

type AuthData {
  _id: ID,
  jwt: String, 
  username: String
}

type Tags {
  _id: ID!,
  name: String
}